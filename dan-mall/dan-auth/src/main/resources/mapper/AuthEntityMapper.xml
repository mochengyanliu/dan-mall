<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dan.danauth.mapper.AuthEntityMapper">
  <resultMap id="BaseResultMap" type="com.dan.danauth.entity.AuthEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sys_id" jdbcType="INTEGER" property="sysId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="auth_key" jdbcType="VARCHAR" property="authKey" />
    <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="clazz" jdbcType="VARCHAR" property="clazz" />
    <result column="target" jdbcType="VARCHAR" property="target" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="parentName" jdbcType="VARCHAR" property="parentName"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, sys_id, name, status, type, url, auth_key, sort_no, parent_id, clazz, target, 
    description, create_user_id, create_time, update_user_id, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dan.danauth.entity.AuthEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_auth (sys_id, name, status, 
      type, url, auth_key, sort_no, 
      parent_id, clazz, target, 
      description, create_user_id, create_time, 
      update_user_id, update_time)
    values (#{sysId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{authKey,jdbcType=VARCHAR}, #{sortNo,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{clazz,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dan.danauth.entity.AuthEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="authKey != null">
        auth_key,
      </if>
      <if test="sortNo != null">
        sort_no,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="target != null">
        target,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null">
        #{authKey,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null">
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dan.danauth.entity.AuthEntity">
    update tb_auth
    <set>
      <if test="sysId != null">
        sys_id = #{sysId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null">
        auth_key = #{authKey,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null">
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="clazz != null">
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dan.danauth.entity.AuthEntity">
    update tb_auth
    set sys_id = #{sysId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      auth_key = #{authKey,jdbcType=VARCHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      clazz = #{clazz,jdbcType=VARCHAR},
      target = #{target,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAuthByRoleIds" parameterType="list" resultMap="BaseResultMap">
    select
    a.id, a.name, a.status, a.clazz, a.type, a.url, a.auth_key, a.sort_no, a.parent_id, a.target, a.description, a.create_user_id,
    a.create_time, a.update_user_id, a.update_time
    FROM tb_auth a
    LEFT JOIN tb_role_auth b ON a.id = b.auth_id
    WHERE b.role_id IN
    <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    AND a.type = 1 AND a.status = 1
    ORDER BY a.sort_no ASC
  </select>

  <update id="updateAuthStatus">
    update tb_auth
    set status = #{status,jdbcType=INTEGER}
    where id = #{authId,jdbcType=INTEGER}
  </update>

  <select id="selectAuthListCount" resultType="java.lang.Integer">
    select count(1) from tb_auth
    where status != 2
    <if test="authPageVO.name != null and authPageVO.name !='' ">
      and name LIKE concat(concat('%',#{authPageVO.name,jdbcType=VARCHAR}),'%')
    </if>
    <if test="authPageVO.type != null">
      and type = #{authPageVO.type,jdbcType=INTEGER}
    </if>
    <if test="authPageVO.status != null">
      and status = #{authPageVO.status,jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectAuthList" resultMap="BaseResultMap">
    select
    a.id, a.sys_id, a.name, a.status, a.type, a.url, a.auth_key, a.sort_no, a.parent_id, a.clazz, a.target,
    a.description, a.create_user_id, a.create_time, a.update_user_id, a.update_time, b.name AS parentName
    from tb_auth a
    left join tb_auth b on a.parent_id = b.id
    where a.status != 2
    <if test="authPageVO.name != null and authPageVO.name !='' ">
      and a.name LIKE concat(concat('%',#{authPageVO.name,jdbcType=VARCHAR}),'%')
    </if>
    <if test="authPageVO.type != null">
      and a.type = #{authPageVO.type,jdbcType=INTEGER}
    </if>
    <if test="authPageVO.status != null">
      and a.status = #{authPageVO.status,jdbcType=INTEGER}
    </if>
    ORDER BY a.create_time DESC
    LIMIT #{authPageVO.dbIndex,jdbcType=INTEGER},#{authPageVO.dbNumber,jdbcType=INTEGER}
  </select>

  <select id="selectAuthTree" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_auth
    where status = 1
    order by create_time
  </select>

  <select id="selectAuthByParentId" resultMap="BaseResultMap">
    select
    a.id, a.name, a.status, a.clazz, a.type, a.url, a.auth_key, a.sort_no, a.parent_id, a.target, a.description, a.create_user_id,
    a.create_time, a.update_user_id, a.update_time
    FROM tb_auth a
    LEFT JOIN tb_role_auth b ON a.id = b.auth_id
    WHERE b.role_id IN
    <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    AND a.parent_id = #{parentId,jdbcType=INTEGER}
    AND a.type = 2 AND a.status = 1
    ORDER BY a.sort_no ASC
  </select>
</mapper>