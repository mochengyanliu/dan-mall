<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dan.danauth.mapper.RoleEntityMapper">
  <resultMap id="BaseResultMap" type="com.dan.danauth.entity.RoleEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="dict_value" jdbcType="INTEGER" property="dictValue" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, org_id, dict_value, status, description, create_user_id, create_time, update_user_id, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dan.danauth.entity.RoleEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_role (name, org_id, dict_value, 
      status, description, create_user_id, 
      create_time, update_user_id, update_time
      )
    values (#{name,jdbcType=VARCHAR}, #{orgId,jdbcType=INTEGER}, #{dictValue,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dan.danauth.entity.RoleEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="dictValue != null">
        dict_value,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="dictValue != null">
        #{dictValue,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dan.danauth.entity.RoleEntity">
    update tb_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="dictValue != null">
        dict_value = #{dictValue,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dan.danauth.entity.RoleEntity">
    update tb_role
    set name = #{name,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=INTEGER},
      dict_value = #{dictValue,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectRoleByUserId" parameterType="integer" resultMap="BaseResultMap">
    select
    a.id, a.name, a.create_time, a.create_user_id
    FROM tb_role a
    LEFT JOIN tb_user_role b ON a.id = b.role_id
    WHERE b.user_id = #{userId,jdbcType=INTEGER} AND a.status = 1
  </select>

  <select id="checkNameByNameAndStatus" resultType="java.lang.Integer">
    select count(1) FROM tb_role
    WHERE name = #{name,jdbcType=VARCHAR} AND status = 1
    <if test="id != null">
      AND id != #{id,jdbcType=INTEGER}
    </if>
  </select>

  <delete id="deleteRoleAuthByRoleId" parameterType="java.lang.Integer">
    delete from tb_role_auth
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <update id="updateRoleStatus">
    update tb_role
    set status = #{status,jdbcType=INTEGER}
    where id in
    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>


  <select id="selectRoleIdsByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select role_id from tb_user_role
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectAllRole" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_role
    where status = 1
  </select>

  <select id="selectRoleByDictValue" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_role
    where dict_value = #{dictValue,jdbcType=INTEGER}
  </select>

  <select id="selectRoleListCount" resultType="java.lang.Integer">
    select count(1) from tb_role
    where status != 2
    <if test="rolePageVO.name != null and rolePageVO.name !='' ">
      and name LIKE concat(concat('%',#{rolePageVO.name,jdbcType=VARCHAR}),'%')
    </if>
    <if test="rolePageVO.status != null">
      and status = #{rolePageVO.status,jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectRoleList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_role
    where status != 2
    <if test="rolePageVO.name != null and rolePageVO.name !='' ">
      and name LIKE concat(concat('%',#{rolePageVO.name,jdbcType=VARCHAR}),'%')
    </if>
    <if test="rolePageVO.status != null">
      and status = #{rolePageVO.status,jdbcType=INTEGER}
    </if>
    ORDER BY create_time DESC
    LIMIT #{rolePageVO.dbIndex,jdbcType=INTEGER},#{rolePageVO.dbNumber,jdbcType=INTEGER}
  </select>
</mapper>